<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <description>Shiro Components</description>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!--cookie的name-->
        <constructor-arg value="s_fanlingjun"/>
        <property name="httpOnly" value="true"/>
        <!--cookie的有效时间 -->
        <property name="maxAge" value="-1"/>
        <!-- 配置存储Session Cookie的domain为 一级域名
        <property name="domain" value=".itboy.net"/>
         -->
    </bean>
    <!-- 用户信息记住我功能的相关配置 -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="re_fanlingjun"/>
        <property name="httpOnly" value="true"/>
        <!-- 配置存储rememberMe Cookie的domain为 一级域名
        <property name="domain" value=".itboy.net"/>
        -->
        <property name="maxAge" value="2592000"/><!-- 30天时间，记住我30天 -->
    </bean>
    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('3AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- redis 的缓存 -->
    <bean id="jedisService" class="comfanlingjun.core.shiro.utils.redis.JedisService"/>

    <!-- Session  的每个回话的ID 生成器，我们用JavaUuidSessionIdGenerator （UUID 规则）。 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- session 创建、删除、查询 -->
    <bean id="shiroSessionDao" class="comfanlingjun.core.shiro.session.impl.ShiroSessionDaoImpl"/>

    <!-- Session  的监听生命周期 -->
    <bean id="blogShiroSessionCycle" class="comfanlingjun.core.shiro.session.lifecycle.BlogShiroSessionCycle">
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!-- shiro session 监听器 -->
    <bean id="BlogSessionListener" class="comfanlingjun.core.shiro.session.listener.BlogSessionListener"/>

    <!-- shrio Session 操作 -->
    <bean id="customShiroSessionService" class="comfanlingjun.core.shiro.session.core.CustomShiroSessionService"/>

    <!-- shiro cache 操作 -->
    <bean id="customShiroCacheService" class="comfanlingjun.core.shiro.cache.CustomShiroCacheService"/>

    <!-- 授权 认证 -->
    <bean id="sampleRealm" class="comfanlingjun.core.shiro.token.SampleRealm"></bean>

    <!-- Session Manager -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 相隔多久检查一次session的有效性   -->
        <property name="sessionValidationInterval" value="1800000"/>
        <!-- session 有效时间为半小时 （毫秒单位）-->
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="sessionDAO" ref="blogShiroSessionCycle"/>
        <!-- session 监听，可以多个。 -->
        <property name="sessionListeners">
            <list>
                <ref bean="BlogSessionListener"/>
            </list>
        </property>
        <!-- 间隔多少时间检查，不配置是60分钟 -->
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <!-- 是否开启 检测，默认开启 -->
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <!-- 是否删除无效的，默认也是开启 -->
        <property name="deleteInvalidSessions" value="true"/>
        <!-- 会话Cookie模板 -->
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler"
          class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
        <!-- 间隔多少时间检查，不配置是60分钟 -->
        <property name="interval" value="${session.validate.timespan}"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="sampleRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <property name="cacheManager" ref="customShiroCacheService"/>
    </bean>

    <!-- 静态注入，相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 静态注入 jedisShiroSessionRepository-->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod"
                  value="comfanlingjun.core.shiro.filter.KickoutSessionFilter.setShiroSessionDao"/>
        <property name="arguments" ref="shiroSessionDao"/>
    </bean>

    <!--自定义角色过滤器 支持多个角色可以访问同一个资源 eg:/home.jsp = authc,roleOR[admin,user] 用户有admin或者user角色 就可以访问-->
    <!-- 认证数据库存储-->
    <bean id="shiroINIService" class="comfanlingjun.core.shiro.utils.ini.ShiroINIServiceImpl"/>
    <bean id="login" class="comfanlingjun.core.shiro.filter.LoginFilter"/>
    <bean id="role" class="comfanlingjun.core.shiro.filter.RoleFilter"/>
    <bean id="permission" class="comfanlingjun.core.shiro.filter.PermissionFilter"/>
    <bean id="simple" class="comfanlingjun.core.shiro.filter.SimpleAuthFilter"/>
    <!-- session 校验单个用户是否多次登录 -->
    <bean id="kickoutSessionFilter" class="comfanlingjun.core.shiro.filter.KickoutSessionFilter"/>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/u/login.shtml"/>
        <property name="successUrl" value="/"/>
        <property name="unauthorizedUrl" value="/?login"/>
        <!-- ini文件配置权限内容-->
        <property name="filterChainDefinitions" value="#{shiroINIService.loadFilterChainDefinitions()}"/>
        <property name="filters">
            <util:map>
                <entry key="login" value-ref="login"></entry>
                <entry key="role" value-ref="role"></entry>
                <entry key="simple" value-ref="simple"></entry>
                <entry key="permission" value-ref="permission"></entry>
                <entry key="kickout" value-ref="kickoutSessionFilter"></entry>
            </util:map>
        </property>
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>